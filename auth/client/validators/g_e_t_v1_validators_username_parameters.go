// Code generated by go-swagger; DO NOT EDIT.

package validators

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGETV1ValidatorsUsernameParams creates a new GETV1ValidatorsUsernameParams object
// with the default values initialized.
func NewGETV1ValidatorsUsernameParams() *GETV1ValidatorsUsernameParams {
	var ()
	return &GETV1ValidatorsUsernameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGETV1ValidatorsUsernameParamsWithTimeout creates a new GETV1ValidatorsUsernameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGETV1ValidatorsUsernameParamsWithTimeout(timeout time.Duration) *GETV1ValidatorsUsernameParams {
	var ()
	return &GETV1ValidatorsUsernameParams{

		timeout: timeout,
	}
}

// NewGETV1ValidatorsUsernameParamsWithContext creates a new GETV1ValidatorsUsernameParams object
// with the default values initialized, and the ability to set a context for a request
func NewGETV1ValidatorsUsernameParamsWithContext(ctx context.Context) *GETV1ValidatorsUsernameParams {
	var ()
	return &GETV1ValidatorsUsernameParams{

		Context: ctx,
	}
}

// NewGETV1ValidatorsUsernameParamsWithHTTPClient creates a new GETV1ValidatorsUsernameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGETV1ValidatorsUsernameParamsWithHTTPClient(client *http.Client) *GETV1ValidatorsUsernameParams {
	var ()
	return &GETV1ValidatorsUsernameParams{
		HTTPClient: client,
	}
}

/*GETV1ValidatorsUsernameParams contains all the parameters to send to the API endpoint
for the g e t v1 validators username operation typically these are written to a http.Request
*/
type GETV1ValidatorsUsernameParams struct {

	/*RequestBodyBirthday
	  Gets or sets the birth day.

	*/
	RequestBodyBirthday *strfmt.DateTime
	/*RequestBodyUsername
	  Gets or sets the username to use as the base username provided by the user

	*/
	RequestBodyUsername *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) WithTimeout(timeout time.Duration) *GETV1ValidatorsUsernameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) WithContext(ctx context.Context) *GETV1ValidatorsUsernameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) WithHTTPClient(client *http.Client) *GETV1ValidatorsUsernameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequestBodyBirthday adds the requestBodyBirthday to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) WithRequestBodyBirthday(requestBodyBirthday *strfmt.DateTime) *GETV1ValidatorsUsernameParams {
	o.SetRequestBodyBirthday(requestBodyBirthday)
	return o
}

// SetRequestBodyBirthday adds the requestBodyBirthday to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) SetRequestBodyBirthday(requestBodyBirthday *strfmt.DateTime) {
	o.RequestBodyBirthday = requestBodyBirthday
}

// WithRequestBodyUsername adds the requestBodyUsername to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) WithRequestBodyUsername(requestBodyUsername *string) *GETV1ValidatorsUsernameParams {
	o.SetRequestBodyUsername(requestBodyUsername)
	return o
}

// SetRequestBodyUsername adds the requestBodyUsername to the g e t v1 validators username params
func (o *GETV1ValidatorsUsernameParams) SetRequestBodyUsername(requestBodyUsername *string) {
	o.RequestBodyUsername = requestBodyUsername
}

// WriteToRequest writes these params to a swagger request
func (o *GETV1ValidatorsUsernameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RequestBodyBirthday != nil {

		// query param requestBody.birthday
		var qrRequestBodyBirthday strfmt.DateTime
		if o.RequestBodyBirthday != nil {
			qrRequestBodyBirthday = *o.RequestBodyBirthday
		}
		qRequestBodyBirthday := qrRequestBodyBirthday.String()
		if qRequestBodyBirthday != "" {
			if err := r.SetQueryParam("requestBody.birthday", qRequestBodyBirthday); err != nil {
				return err
			}
		}

	}

	if o.RequestBodyUsername != nil {

		// query param requestBody.username
		var qrRequestBodyUsername string
		if o.RequestBodyUsername != nil {
			qrRequestBodyUsername = *o.RequestBodyUsername
		}
		qRequestBodyUsername := qrRequestBodyUsername
		if qRequestBodyUsername != "" {
			if err := r.SetQueryParam("requestBody.username", qRequestBodyUsername); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
