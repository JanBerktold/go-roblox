// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TwoStepVerificationVerifyRequestModel A request model that contains information needed to verify with two step verification
// swagger:model TwoStepVerificationVerifyRequestModel

type TwoStepVerificationVerifyRequestModel struct {

	// The {Roblox.Platform.TwoStepVerification.TwoStepVerificationActionType} to verify.
	ActionType string `json:"actionType,omitempty"`

	// The two step verification code
	Code string `json:"code,omitempty"`

	// Whether or not to remember the device for two step verification.
	RememberDevice bool `json:"rememberDevice,omitempty"`

	// The ticket
	Ticket string `json:"ticket,omitempty"`

	// The username of the user the ticket belongs to
	Username string `json:"username,omitempty"`
}

/* polymorph TwoStepVerificationVerifyRequestModel actionType false */

/* polymorph TwoStepVerificationVerifyRequestModel code false */

/* polymorph TwoStepVerificationVerifyRequestModel rememberDevice false */

/* polymorph TwoStepVerificationVerifyRequestModel ticket false */

/* polymorph TwoStepVerificationVerifyRequestModel username false */

// Validate validates this two step verification verify request model
func (m *TwoStepVerificationVerifyRequestModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActionType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var twoStepVerificationVerifyRequestModelTypeActionTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Login"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		twoStepVerificationVerifyRequestModelTypeActionTypePropEnum = append(twoStepVerificationVerifyRequestModelTypeActionTypePropEnum, v)
	}
}

const (
	// TwoStepVerificationVerifyRequestModelActionTypeLogin captures enum value "Login"
	TwoStepVerificationVerifyRequestModelActionTypeLogin string = "Login"
)

// prop value enum
func (m *TwoStepVerificationVerifyRequestModel) validateActionTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, twoStepVerificationVerifyRequestModelTypeActionTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TwoStepVerificationVerifyRequestModel) validateActionType(formats strfmt.Registry) error {

	if swag.IsZero(m.ActionType) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionTypeEnum("actionType", "body", m.ActionType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TwoStepVerificationVerifyRequestModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TwoStepVerificationVerifyRequestModel) UnmarshalBinary(b []byte) error {
	var res TwoStepVerificationVerifyRequestModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
