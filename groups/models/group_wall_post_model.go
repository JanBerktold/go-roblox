// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GroupWallPostModel A response model for group wall post information
// swagger:model GroupWallPostModel

type GroupWallPostModel struct {

	// The group wall post body.
	Body string `json:"body,omitempty"`

	// When the group wall post was posted.
	Created strfmt.DateTime `json:"created,omitempty"`

	// The group wall post Id.
	ID int32 `json:"id,omitempty"`

	// The user that posted the group wall post.
	Poster *UserModel `json:"poster,omitempty"`

	// When the group wall post was last updated.
	Updated strfmt.DateTime `json:"updated,omitempty"`
}

/* polymorph GroupWallPostModel body false */

/* polymorph GroupWallPostModel created false */

/* polymorph GroupWallPostModel id false */

/* polymorph GroupWallPostModel poster false */

/* polymorph GroupWallPostModel updated false */

// Validate validates this group wall post model
func (m *GroupWallPostModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePoster(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GroupWallPostModel) validatePoster(formats strfmt.Registry) error {

	if swag.IsZero(m.Poster) { // not required
		return nil
	}

	if m.Poster != nil {

		if err := m.Poster.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("poster")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GroupWallPostModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GroupWallPostModel) UnmarshalBinary(b []byte) error {
	var res GroupWallPostModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
