// Code generated by go-swagger; DO NOT EDIT.

package wall

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janberktold/go-roblox/groups/models"
)

// DELETEV1GroupsGroupIDWallPostsPostIDReader is a Reader for the DELETEV1GroupsGroupIDWallPostsPostID structure.
type DELETEV1GroupsGroupIDWallPostsPostIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DELETEV1GroupsGroupIDWallPostsPostIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDELETEV1GroupsGroupIDWallPostsPostIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDELETEV1GroupsGroupIDWallPostsPostIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDELETEV1GroupsGroupIDWallPostsPostIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDELETEV1GroupsGroupIDWallPostsPostIDOK creates a DELETEV1GroupsGroupIDWallPostsPostIDOK with default headers values
func NewDELETEV1GroupsGroupIDWallPostsPostIDOK() *DELETEV1GroupsGroupIDWallPostsPostIDOK {
	return &DELETEV1GroupsGroupIDWallPostsPostIDOK{}
}

/*DELETEV1GroupsGroupIDWallPostsPostIDOK handles this case with default header values.

The group wall post was successfully deleted.
*/
type DELETEV1GroupsGroupIDWallPostsPostIDOK struct {
	Payload models.APIEmptyResponseModel
}

func (o *DELETEV1GroupsGroupIDWallPostsPostIDOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/groups/{groupId}/wall/posts/{postId}][%d] dELETEV1GroupsGroupIdWallPostsPostIdOK  %+v", 200, o.Payload)
}

func (o *DELETEV1GroupsGroupIDWallPostsPostIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDELETEV1GroupsGroupIDWallPostsPostIDBadRequest creates a DELETEV1GroupsGroupIDWallPostsPostIDBadRequest with default headers values
func NewDELETEV1GroupsGroupIDWallPostsPostIDBadRequest() *DELETEV1GroupsGroupIDWallPostsPostIDBadRequest {
	return &DELETEV1GroupsGroupIDWallPostsPostIDBadRequest{}
}

/*DELETEV1GroupsGroupIDWallPostsPostIDBadRequest handles this case with default header values.

{Roblox.Groups.Api.ResponseEnums.WallPostErrors.InvalidGroupId}
            OR
            {Roblox.Groups.Api.ResponseEnums.WallPostErrors.InvalidGroupWallPostId}
*/
type DELETEV1GroupsGroupIDWallPostsPostIDBadRequest struct {
}

func (o *DELETEV1GroupsGroupIDWallPostsPostIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/groups/{groupId}/wall/posts/{postId}][%d] dELETEV1GroupsGroupIdWallPostsPostIdBadRequest ", 400)
}

func (o *DELETEV1GroupsGroupIDWallPostsPostIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDELETEV1GroupsGroupIDWallPostsPostIDForbidden creates a DELETEV1GroupsGroupIDWallPostsPostIDForbidden with default headers values
func NewDELETEV1GroupsGroupIDWallPostsPostIDForbidden() *DELETEV1GroupsGroupIDWallPostsPostIDForbidden {
	return &DELETEV1GroupsGroupIDWallPostsPostIDForbidden{}
}

/*DELETEV1GroupsGroupIDWallPostsPostIDForbidden handles this case with default header values.

{Roblox.Groups.Api.ResponseEnums.WallPostErrors.Unauthorized}
*/
type DELETEV1GroupsGroupIDWallPostsPostIDForbidden struct {
}

func (o *DELETEV1GroupsGroupIDWallPostsPostIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/groups/{groupId}/wall/posts/{postId}][%d] dELETEV1GroupsGroupIdWallPostsPostIdForbidden ", 403)
}

func (o *DELETEV1GroupsGroupIDWallPostsPostIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
