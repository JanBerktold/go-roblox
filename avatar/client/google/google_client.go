// Code generated by go-swagger; DO NOT EDIT.

package google

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new google API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for google API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
POSTV1GooglePurchase performs a purchase and grant desired product
*/
func (a *Client) POSTV1GooglePurchase(params *POSTV1GooglePurchaseParams) (*POSTV1GooglePurchaseOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPOSTV1GooglePurchaseParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "POST_v1_google_purchase",
		Method:             "POST",
		PathPattern:        "/v1/google/purchase",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &POSTV1GooglePurchaseReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*POSTV1GooglePurchaseOK), nil

}

/*
POSTV1GoogleValidate validates a product Id before making a purchase
*/
func (a *Client) POSTV1GoogleValidate(params *POSTV1GoogleValidateParams) (*POSTV1GoogleValidateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPOSTV1GoogleValidateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "POST_v1_google_validate",
		Method:             "POST",
		PathPattern:        "/v1/google/validate",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json", "application/x-www-form-urlencoded", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &POSTV1GoogleValidateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*POSTV1GoogleValidateOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
