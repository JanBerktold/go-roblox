// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGETV1AssetsAssetIDOwnersParams creates a new GETV1AssetsAssetIDOwnersParams object
// with the default values initialized.
func NewGETV1AssetsAssetIDOwnersParams() *GETV1AssetsAssetIDOwnersParams {
	var (
		limitDefault     = int32(10)
		sortOrderDefault = string("Asc")
	)
	return &GETV1AssetsAssetIDOwnersParams{
		Limit:     &limitDefault,
		SortOrder: &sortOrderDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGETV1AssetsAssetIDOwnersParamsWithTimeout creates a new GETV1AssetsAssetIDOwnersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGETV1AssetsAssetIDOwnersParamsWithTimeout(timeout time.Duration) *GETV1AssetsAssetIDOwnersParams {
	var (
		limitDefault     = int32(10)
		sortOrderDefault = string("Asc")
	)
	return &GETV1AssetsAssetIDOwnersParams{
		Limit:     &limitDefault,
		SortOrder: &sortOrderDefault,

		timeout: timeout,
	}
}

// NewGETV1AssetsAssetIDOwnersParamsWithContext creates a new GETV1AssetsAssetIDOwnersParams object
// with the default values initialized, and the ability to set a context for a request
func NewGETV1AssetsAssetIDOwnersParamsWithContext(ctx context.Context) *GETV1AssetsAssetIDOwnersParams {
	var (
		limitDefault     = int32(10)
		sortOrderDefault = string("Asc")
	)
	return &GETV1AssetsAssetIDOwnersParams{
		Limit:     &limitDefault,
		SortOrder: &sortOrderDefault,

		Context: ctx,
	}
}

// NewGETV1AssetsAssetIDOwnersParamsWithHTTPClient creates a new GETV1AssetsAssetIDOwnersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGETV1AssetsAssetIDOwnersParamsWithHTTPClient(client *http.Client) *GETV1AssetsAssetIDOwnersParams {
	var (
		limitDefault     = int32(10)
		sortOrderDefault = string("Asc")
	)
	return &GETV1AssetsAssetIDOwnersParams{
		Limit:      &limitDefault,
		SortOrder:  &sortOrderDefault,
		HTTPClient: client,
	}
}

/*GETV1AssetsAssetIDOwnersParams contains all the parameters to send to the API endpoint
for the g e t v1 assets asset Id owners operation typically these are written to a http.Request
*/
type GETV1AssetsAssetIDOwnersParams struct {

	/*AssetID
	  The asset id.

	*/
	AssetID int64
	/*Cursor
	  The paging cursor for the previous or next page.

	*/
	Cursor *string
	/*Limit
	  The amount of results per request.

	*/
	Limit *int32
	/*SortOrder
	  Sorted by userAssetId

	*/
	SortOrder *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) WithTimeout(timeout time.Duration) *GETV1AssetsAssetIDOwnersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) WithContext(ctx context.Context) *GETV1AssetsAssetIDOwnersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) WithHTTPClient(client *http.Client) *GETV1AssetsAssetIDOwnersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAssetID adds the assetID to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) WithAssetID(assetID int64) *GETV1AssetsAssetIDOwnersParams {
	o.SetAssetID(assetID)
	return o
}

// SetAssetID adds the assetId to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) SetAssetID(assetID int64) {
	o.AssetID = assetID
}

// WithCursor adds the cursor to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) WithCursor(cursor *string) *GETV1AssetsAssetIDOwnersParams {
	o.SetCursor(cursor)
	return o
}

// SetCursor adds the cursor to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) SetCursor(cursor *string) {
	o.Cursor = cursor
}

// WithLimit adds the limit to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) WithLimit(limit *int32) *GETV1AssetsAssetIDOwnersParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithSortOrder adds the sortOrder to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) WithSortOrder(sortOrder *string) *GETV1AssetsAssetIDOwnersParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the g e t v1 assets asset Id owners params
func (o *GETV1AssetsAssetIDOwnersParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WriteToRequest writes these params to a swagger request
func (o *GETV1AssetsAssetIDOwnersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param assetId
	if err := r.SetPathParam("assetId", swag.FormatInt64(o.AssetID)); err != nil {
		return err
	}

	if o.Cursor != nil {

		// query param cursor
		var qrCursor string
		if o.Cursor != nil {
			qrCursor = *o.Cursor
		}
		qCursor := qrCursor
		if qCursor != "" {
			if err := r.SetQueryParam("cursor", qCursor); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.SortOrder != nil {

		// query param sortOrder
		var qrSortOrder string
		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {
			if err := r.SetQueryParam("sortOrder", qSortOrder); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
