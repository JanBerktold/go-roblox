// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// UniverseModel universe model
// swagger:model UniverseModel

type UniverseModel struct {

	// The created {System.DateTime}
	Created strfmt.DateTime `json:"created,omitempty"`

	// The name of the creator of the universe.
	CreatorName string `json:"creatorName,omitempty"`

	// The id of the user or group that created this universe.
	CreatorTargetID int64 `json:"creatorTargetId,omitempty"`

	// The creator type, either "User" or "Group"
	CreatorType string `json:"creatorType,omitempty"`

	// The description of the universe
	Description string `json:"description,omitempty"`

	// The universe Id
	ID int64 `json:"id,omitempty"`

	// Is this universe active
	IsActive bool `json:"isActive,omitempty"`

	// The name of the universe
	Name string `json:"name,omitempty"`

	// The universe's root place id
	RootPlaceID int64 `json:"rootPlaceId,omitempty"`

	// The updated {System.DateTime}
	Updated strfmt.DateTime `json:"updated,omitempty"`
}

/* polymorph UniverseModel created false */

/* polymorph UniverseModel creatorName false */

/* polymorph UniverseModel creatorTargetId false */

/* polymorph UniverseModel creatorType false */

/* polymorph UniverseModel description false */

/* polymorph UniverseModel id false */

/* polymorph UniverseModel isActive false */

/* polymorph UniverseModel name false */

/* polymorph UniverseModel rootPlaceId false */

/* polymorph UniverseModel updated false */

// Validate validates this universe model
func (m *UniverseModel) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *UniverseModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UniverseModel) UnmarshalBinary(b []byte) error {
	var res UniverseModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
