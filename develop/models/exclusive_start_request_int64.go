// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ExclusiveStartRequestInt64 exclusive start request int64
// swagger:model ExclusiveStartRequest[Int64]

type ExclusiveStartRequestInt64 struct {

	// cursor recipe
	// Read Only: true
	CursorRecipe string `json:"CursorRecipe,omitempty"`

	// exclusive start key info
	// Read Only: true
	ExclusiveStartKeyInfo *IExclusiveStartKeyInfoInt64 `json:"ExclusiveStartKeyInfo,omitempty"`
}

/* polymorph ExclusiveStartRequest[Int64] CursorRecipe false */

/* polymorph ExclusiveStartRequest[Int64] ExclusiveStartKeyInfo false */

// Validate validates this exclusive start request int64
func (m *ExclusiveStartRequestInt64) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExclusiveStartKeyInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExclusiveStartRequestInt64) validateExclusiveStartKeyInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.ExclusiveStartKeyInfo) { // not required
		return nil
	}

	if m.ExclusiveStartKeyInfo != nil {

		if err := m.ExclusiveStartKeyInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ExclusiveStartKeyInfo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExclusiveStartRequestInt64) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExclusiveStartRequestInt64) UnmarshalBinary(b []byte) error {
	var res ExclusiveStartRequestInt64
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
