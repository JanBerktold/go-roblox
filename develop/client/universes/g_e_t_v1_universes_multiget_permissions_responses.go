// Code generated by go-swagger; DO NOT EDIT.

package universes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janberktold/go-roblox/develop/models"
)

// GETV1UniversesMultigetPermissionsReader is a Reader for the GETV1UniversesMultigetPermissions structure.
type GETV1UniversesMultigetPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETV1UniversesMultigetPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGETV1UniversesMultigetPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGETV1UniversesMultigetPermissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGETV1UniversesMultigetPermissionsOK creates a GETV1UniversesMultigetPermissionsOK with default headers values
func NewGETV1UniversesMultigetPermissionsOK() *GETV1UniversesMultigetPermissionsOK {
	return &GETV1UniversesMultigetPermissionsOK{}
}

/*GETV1UniversesMultigetPermissionsOK handles this case with default header values.

GETV1UniversesMultigetPermissionsOK g e t v1 universes multiget permissions o k
*/
type GETV1UniversesMultigetPermissionsOK struct {
	Payload *models.APIMultiGetResponseUniverseIDPermissionsModel
}

func (o *GETV1UniversesMultigetPermissionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/universes/multiget/permissions][%d] gETV1UniversesMultigetPermissionsOK  %+v", 200, o.Payload)
}

func (o *GETV1UniversesMultigetPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMultiGetResponseUniverseIDPermissionsModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETV1UniversesMultigetPermissionsBadRequest creates a GETV1UniversesMultigetPermissionsBadRequest with default headers values
func NewGETV1UniversesMultigetPermissionsBadRequest() *GETV1UniversesMultigetPermissionsBadRequest {
	return &GETV1UniversesMultigetPermissionsBadRequest{}
}

/*GETV1UniversesMultigetPermissionsBadRequest handles this case with default header values.

{ids} exceeded the allowed limit of ids.
*/
type GETV1UniversesMultigetPermissionsBadRequest struct {
}

func (o *GETV1UniversesMultigetPermissionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universes/multiget/permissions][%d] gETV1UniversesMultigetPermissionsBadRequest ", 400)
}

func (o *GETV1UniversesMultigetPermissionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
