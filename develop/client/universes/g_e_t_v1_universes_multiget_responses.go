// Code generated by go-swagger; DO NOT EDIT.

package universes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janberktold/go-roblox/develop/models"
)

// GETV1UniversesMultigetReader is a Reader for the GETV1UniversesMultiget structure.
type GETV1UniversesMultigetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETV1UniversesMultigetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGETV1UniversesMultigetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGETV1UniversesMultigetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGETV1UniversesMultigetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGETV1UniversesMultigetOK creates a GETV1UniversesMultigetOK with default headers values
func NewGETV1UniversesMultigetOK() *GETV1UniversesMultigetOK {
	return &GETV1UniversesMultigetOK{}
}

/*GETV1UniversesMultigetOK handles this case with default header values.

GETV1UniversesMultigetOK g e t v1 universes multiget o k
*/
type GETV1UniversesMultigetOK struct {
	Payload *models.APIMultiGetResponseUniverseModel
}

func (o *GETV1UniversesMultigetOK) Error() string {
	return fmt.Sprintf("[GET /v1/universes/multiget][%d] gETV1UniversesMultigetOK  %+v", 200, o.Payload)
}

func (o *GETV1UniversesMultigetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIMultiGetResponseUniverseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETV1UniversesMultigetBadRequest creates a GETV1UniversesMultigetBadRequest with default headers values
func NewGETV1UniversesMultigetBadRequest() *GETV1UniversesMultigetBadRequest {
	return &GETV1UniversesMultigetBadRequest{}
}

/*GETV1UniversesMultigetBadRequest handles this case with default header values.

{ids} is invalid or wasn't parsable.
*/
type GETV1UniversesMultigetBadRequest struct {
}

func (o *GETV1UniversesMultigetBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universes/multiget][%d] gETV1UniversesMultigetBadRequest ", 400)
}

func (o *GETV1UniversesMultigetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGETV1UniversesMultigetInternalServerError creates a GETV1UniversesMultigetInternalServerError with default headers values
func NewGETV1UniversesMultigetInternalServerError() *GETV1UniversesMultigetInternalServerError {
	return &GETV1UniversesMultigetInternalServerError{}
}

/*GETV1UniversesMultigetInternalServerError handles this case with default header values.

Unknown error retrieving universe information.
*/
type GETV1UniversesMultigetInternalServerError struct {
}

func (o *GETV1UniversesMultigetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/universes/multiget][%d] gETV1UniversesMultigetInternalServerError ", 500)
}

func (o *GETV1UniversesMultigetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
