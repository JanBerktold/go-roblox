// Code generated by go-swagger; DO NOT EDIT.

package universes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janberktold/go-roblox/develop/models"
)

// GETV1UniversesUniverseIDReader is a Reader for the GETV1UniversesUniverseID structure.
type GETV1UniversesUniverseIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETV1UniversesUniverseIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGETV1UniversesUniverseIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGETV1UniversesUniverseIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGETV1UniversesUniverseIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGETV1UniversesUniverseIDOK creates a GETV1UniversesUniverseIDOK with default headers values
func NewGETV1UniversesUniverseIDOK() *GETV1UniversesUniverseIDOK {
	return &GETV1UniversesUniverseIDOK{}
}

/*GETV1UniversesUniverseIDOK handles this case with default header values.

GETV1UniversesUniverseIDOK g e t v1 universes universe Id o k
*/
type GETV1UniversesUniverseIDOK struct {
	Payload *models.UniverseModel
}

func (o *GETV1UniversesUniverseIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/universes/{universeId}][%d] gETV1UniversesUniverseIdOK  %+v", 200, o.Payload)
}

func (o *GETV1UniversesUniverseIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UniverseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETV1UniversesUniverseIDBadRequest creates a GETV1UniversesUniverseIDBadRequest with default headers values
func NewGETV1UniversesUniverseIDBadRequest() *GETV1UniversesUniverseIDBadRequest {
	return &GETV1UniversesUniverseIDBadRequest{}
}

/*GETV1UniversesUniverseIDBadRequest handles this case with default header values.

Invalid {universeId}.
*/
type GETV1UniversesUniverseIDBadRequest struct {
}

func (o *GETV1UniversesUniverseIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universes/{universeId}][%d] gETV1UniversesUniverseIdBadRequest ", 400)
}

func (o *GETV1UniversesUniverseIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGETV1UniversesUniverseIDInternalServerError creates a GETV1UniversesUniverseIDInternalServerError with default headers values
func NewGETV1UniversesUniverseIDInternalServerError() *GETV1UniversesUniverseIDInternalServerError {
	return &GETV1UniversesUniverseIDInternalServerError{}
}

/*GETV1UniversesUniverseIDInternalServerError handles this case with default header values.

Unknown error retrieving universe information.
*/
type GETV1UniversesUniverseIDInternalServerError struct {
}

func (o *GETV1UniversesUniverseIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/universes/{universeId}][%d] gETV1UniversesUniverseIdInternalServerError ", 500)
}

func (o *GETV1UniversesUniverseIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
