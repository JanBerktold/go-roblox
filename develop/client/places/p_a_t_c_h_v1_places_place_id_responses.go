// Code generated by go-swagger; DO NOT EDIT.

package places

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janberktold/go-roblox/develop/models"
)

// PATCHV1PlacesPlaceIDReader is a Reader for the PATCHV1PlacesPlaceID structure.
type PATCHV1PlacesPlaceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PATCHV1PlacesPlaceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPATCHV1PlacesPlaceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPATCHV1PlacesPlaceIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPATCHV1PlacesPlaceIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPATCHV1PlacesPlaceIDOK creates a PATCHV1PlacesPlaceIDOK with default headers values
func NewPATCHV1PlacesPlaceIDOK() *PATCHV1PlacesPlaceIDOK {
	return &PATCHV1PlacesPlaceIDOK{}
}

/*PATCHV1PlacesPlaceIDOK handles this case with default header values.

PATCHV1PlacesPlaceIDOK p a t c h v1 places place Id o k
*/
type PATCHV1PlacesPlaceIDOK struct {
	Payload *models.PlaceModel
}

func (o *PATCHV1PlacesPlaceIDOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/places/{placeId}][%d] pATCHV1PlacesPlaceIdOK  %+v", 200, o.Payload)
}

func (o *PATCHV1PlacesPlaceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlaceModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPATCHV1PlacesPlaceIDBadRequest creates a PATCHV1PlacesPlaceIDBadRequest with default headers values
func NewPATCHV1PlacesPlaceIDBadRequest() *PATCHV1PlacesPlaceIDBadRequest {
	return &PATCHV1PlacesPlaceIDBadRequest{}
}

/*PATCHV1PlacesPlaceIDBadRequest handles this case with default header values.

{placeId} is invalid.
*/
type PATCHV1PlacesPlaceIDBadRequest struct {
}

func (o *PATCHV1PlacesPlaceIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/places/{placeId}][%d] pATCHV1PlacesPlaceIdBadRequest ", 400)
}

func (o *PATCHV1PlacesPlaceIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPATCHV1PlacesPlaceIDUnauthorized creates a PATCHV1PlacesPlaceIDUnauthorized with default headers values
func NewPATCHV1PlacesPlaceIDUnauthorized() *PATCHV1PlacesPlaceIDUnauthorized {
	return &PATCHV1PlacesPlaceIDUnauthorized{}
}

/*PATCHV1PlacesPlaceIDUnauthorized handles this case with default header values.

Authenticated user is not authorized to manage this place.
*/
type PATCHV1PlacesPlaceIDUnauthorized struct {
}

func (o *PATCHV1PlacesPlaceIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v1/places/{placeId}][%d] pATCHV1PlacesPlaceIdUnauthorized ", 401)
}

func (o *PATCHV1PlacesPlaceIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
