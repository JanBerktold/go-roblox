// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janberktold/go-roblox/develop/models"
)

// POSTV1UserStudiodataReader is a Reader for the POSTV1UserStudiodata structure.
type POSTV1UserStudiodataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *POSTV1UserStudiodataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPOSTV1UserStudiodataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPOSTV1UserStudiodataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPOSTV1UserStudiodataOK creates a POSTV1UserStudiodataOK with default headers values
func NewPOSTV1UserStudiodataOK() *POSTV1UserStudiodataOK {
	return &POSTV1UserStudiodataOK{}
}

/*POSTV1UserStudiodataOK handles this case with default header values.

POSTV1UserStudiodataOK p o s t v1 user studiodata o k
*/
type POSTV1UserStudiodataOK struct {
	Payload *models.APISuccessResponse
}

func (o *POSTV1UserStudiodataOK) Error() string {
	return fmt.Sprintf("[POST /v1/user/studiodata][%d] pOSTV1UserStudiodataOK  %+v", 200, o.Payload)
}

func (o *POSTV1UserStudiodataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APISuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPOSTV1UserStudiodataBadRequest creates a POSTV1UserStudiodataBadRequest with default headers values
func NewPOSTV1UserStudiodataBadRequest() *POSTV1UserStudiodataBadRequest {
	return &POSTV1UserStudiodataBadRequest{}
}

/*POSTV1UserStudiodataBadRequest handles this case with default header values.

No data was sent or the data could not be parsed as JSON
*/
type POSTV1UserStudiodataBadRequest struct {
}

func (o *POSTV1UserStudiodataBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/user/studiodata][%d] pOSTV1UserStudiodataBadRequest ", 400)
}

func (o *POSTV1UserStudiodataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
