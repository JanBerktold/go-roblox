// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPOSTV1UserStudiodataParams creates a new POSTV1UserStudiodataParams object
// with the default values initialized.
func NewPOSTV1UserStudiodataParams() *POSTV1UserStudiodataParams {
	var ()
	return &POSTV1UserStudiodataParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPOSTV1UserStudiodataParamsWithTimeout creates a new POSTV1UserStudiodataParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPOSTV1UserStudiodataParamsWithTimeout(timeout time.Duration) *POSTV1UserStudiodataParams {
	var ()
	return &POSTV1UserStudiodataParams{

		timeout: timeout,
	}
}

// NewPOSTV1UserStudiodataParamsWithContext creates a new POSTV1UserStudiodataParams object
// with the default values initialized, and the ability to set a context for a request
func NewPOSTV1UserStudiodataParamsWithContext(ctx context.Context) *POSTV1UserStudiodataParams {
	var ()
	return &POSTV1UserStudiodataParams{

		Context: ctx,
	}
}

// NewPOSTV1UserStudiodataParamsWithHTTPClient creates a new POSTV1UserStudiodataParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPOSTV1UserStudiodataParamsWithHTTPClient(client *http.Client) *POSTV1UserStudiodataParams {
	var ()
	return &POSTV1UserStudiodataParams{
		HTTPClient: client,
	}
}

/*POSTV1UserStudiodataParams contains all the parameters to send to the API endpoint
for the p o s t v1 user studiodata operation typically these are written to a http.Request
*/
type POSTV1UserStudiodataParams struct {

	/*ClientKey
	  A Key to save this data under. Optional.

	*/
	ClientKey *string
	/*Data
	  The data.

	*/
	Data interface{}

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) WithTimeout(timeout time.Duration) *POSTV1UserStudiodataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) WithContext(ctx context.Context) *POSTV1UserStudiodataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) WithHTTPClient(client *http.Client) *POSTV1UserStudiodataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientKey adds the clientKey to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) WithClientKey(clientKey *string) *POSTV1UserStudiodataParams {
	o.SetClientKey(clientKey)
	return o
}

// SetClientKey adds the clientKey to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) SetClientKey(clientKey *string) {
	o.ClientKey = clientKey
}

// WithData adds the data to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) WithData(data interface{}) *POSTV1UserStudiodataParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the p o s t v1 user studiodata params
func (o *POSTV1UserStudiodataParams) SetData(data interface{}) {
	o.Data = data
}

// WriteToRequest writes these params to a swagger request
func (o *POSTV1UserStudiodataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClientKey != nil {

		// query param clientKey
		var qrClientKey string
		if o.ClientKey != nil {
			qrClientKey = *o.ClientKey
		}
		qClientKey := qrClientKey
		if qClientKey != "" {
			if err := r.SetQueryParam("clientKey", qClientKey); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
