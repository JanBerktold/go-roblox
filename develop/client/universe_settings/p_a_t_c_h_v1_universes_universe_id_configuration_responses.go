// Code generated by go-swagger; DO NOT EDIT.

package universe_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janberktold/go-roblox/develop/models"
)

// PATCHV1UniversesUniverseIDConfigurationReader is a Reader for the PATCHV1UniversesUniverseIDConfiguration structure.
type PATCHV1UniversesUniverseIDConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PATCHV1UniversesUniverseIDConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPATCHV1UniversesUniverseIDConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPATCHV1UniversesUniverseIDConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPATCHV1UniversesUniverseIDConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPATCHV1UniversesUniverseIDConfigurationOK creates a PATCHV1UniversesUniverseIDConfigurationOK with default headers values
func NewPATCHV1UniversesUniverseIDConfigurationOK() *PATCHV1UniversesUniverseIDConfigurationOK {
	return &PATCHV1UniversesUniverseIDConfigurationOK{}
}

/*PATCHV1UniversesUniverseIDConfigurationOK handles this case with default header values.

PATCHV1UniversesUniverseIDConfigurationOK p a t c h v1 universes universe Id configuration o k
*/
type PATCHV1UniversesUniverseIDConfigurationOK struct {
	Payload *models.UniverseSettingsResponse
}

func (o *PATCHV1UniversesUniverseIDConfigurationOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/universes/{universeId}/configuration][%d] pATCHV1UniversesUniverseIdConfigurationOK  %+v", 200, o.Payload)
}

func (o *PATCHV1UniversesUniverseIDConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UniverseSettingsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPATCHV1UniversesUniverseIDConfigurationBadRequest creates a PATCHV1UniversesUniverseIDConfigurationBadRequest with default headers values
func NewPATCHV1UniversesUniverseIDConfigurationBadRequest() *PATCHV1UniversesUniverseIDConfigurationBadRequest {
	return &PATCHV1UniversesUniverseIDConfigurationBadRequest{}
}

/*PATCHV1UniversesUniverseIDConfigurationBadRequest handles this case with default header values.

{Roblox.Api.Develop.ResponseEnums.UniverseSettingsErrors.UniverseNameTooLong}
*/
type PATCHV1UniversesUniverseIDConfigurationBadRequest struct {
}

func (o *PATCHV1UniversesUniverseIDConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/universes/{universeId}/configuration][%d] pATCHV1UniversesUniverseIdConfigurationBadRequest ", 400)
}

func (o *PATCHV1UniversesUniverseIDConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPATCHV1UniversesUniverseIDConfigurationUnauthorized creates a PATCHV1UniversesUniverseIDConfigurationUnauthorized with default headers values
func NewPATCHV1UniversesUniverseIDConfigurationUnauthorized() *PATCHV1UniversesUniverseIDConfigurationUnauthorized {
	return &PATCHV1UniversesUniverseIDConfigurationUnauthorized{}
}

/*PATCHV1UniversesUniverseIDConfigurationUnauthorized handles this case with default header values.

{Roblox.Api.Develop.ResponseEnums.UniverseSettingsErrors.UnauthorizedUniverseAccess}
*/
type PATCHV1UniversesUniverseIDConfigurationUnauthorized struct {
}

func (o *PATCHV1UniversesUniverseIDConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v1/universes/{universeId}/configuration][%d] pATCHV1UniversesUniverseIdConfigurationUnauthorized ", 401)
}

func (o *PATCHV1UniversesUniverseIDConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
